<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/10/27/tech/hello-world/"/>
      <url>/2023/10/27/tech/hello-world/</url>
      
        <content type="html"><![CDATA[<p>以下是一个示例程序编程语言版本的 “Hello, World!” 打印程序，以Markdown格式呈现：</p><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello, World!&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Hello, World!&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello, World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">puts <span class="string">&quot;Hello, World!&quot;</span></span><br></pre></td></tr></table></figure><h2 id="C-1"><a href="#C-1" class="headerlink" title="C#"></a>C#</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span> &#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span> &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Hello, World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/10/27/hello-world/"/>
      <url>/2023/10/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C</title>
      <link href="/2023/10/26/C/"/>
      <url>/2023/10/26/C/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tech </tag>
            
            <tag> front </tag>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/2023/09/25/tags/"/>
      <url>/2023/09/25/tags/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>life</title>
      <link href="/2023/09/25/record/life1/"/>
      <url>/2023/09/25/record/life1/</url>
      
        <content type="html"><![CDATA[<h3 id="life-post"><a href="#life-post" class="headerlink" title="life_post"></a>life_post</h3>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Photo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue</title>
      <link href="/2023/09/25/tech/vue/"/>
      <url>/2023/09/25/tech/vue/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-js-官方介绍"><a href="#Vue-js-官方介绍" class="headerlink" title="Vue.js 官方介绍"></a>Vue.js 官方介绍</h1><p><img src="https://vuejs.org/images/logo.png" alt="Vue.js Logo"></p><h2 id="什么是-Vue-js？"><a href="#什么是-Vue-js？" class="headerlink" title="什么是 Vue.js？"></a>什么是 Vue.js？</h2><p>Vue.js 是一个渐进式的 JavaScript 框架，用于构建用户界面。它被设计为易于集成和逐步采用，使开发者能够构建复杂的单页应用和交互式 Web 界面。</p><h2 id="主要特点"><a href="#主要特点" class="headerlink" title="主要特点"></a>主要特点</h2><p>Vue.js 提供了一些强大的特性，使其成为一个流行的前端开发工具：</p><ul><li><p><strong>响应式数据绑定</strong>：Vue.js 支持声明式渲染和双向数据绑定，使 UI 与数据保持同步。</p></li><li><p><strong>组件化开发</strong>：Vue.js 鼓励组件化开发，使开发人员能够构建可重用的 UI 组件。</p></li><li><p><strong>虚拟 DOM</strong>：Vue.js 使用虚拟 DOM 来高效地渲染页面，最小化不必要的 DOM 操作，从而提高性能。</p></li><li><p><strong>指令系统</strong>：Vue.js 提供了丰富的指令，用于处理 DOM 元素，例如 <code>v-if</code>、<code>v-for</code>、<code>v-bind</code> 和 <code>v-on</code>。</p></li><li><p><strong>路由</strong>：Vue.js 配合 Vue Router 提供了强大的路由管理功能，用于构建单页应用程序。</p></li><li><p><strong>状态管理</strong>：Vue.js 与 Vuex 集成，用于管理应用程序的状态。</p></li></ul><h2 id="使用-Vue-js"><a href="#使用-Vue-js" class="headerlink" title="使用 Vue.js"></a>使用 Vue.js</h2><p>要开始使用 Vue.js，您可以按照以下步骤操作：</p><ol><li><p><strong>引入 Vue.js</strong>：在项目中引入 Vue.js，可以通过 CDN 引入或使用包管理器（如 npm 或 yarn）进行安装。</p></li><li><p><strong>创建一个 Vue 实例</strong>：在 HTML 中创建一个容器元素，并使用 Vue 初始化一个新的 Vue 实例。</p></li><li><p><strong>定义模板</strong>：在 Vue 实例中定义模板，使用 Vue 的指令来渲染数据和控制页面行为。</p></li><li><p><strong>绑定数据</strong>：将数据绑定到模板中，使页面可以动态地响应数据的变化。</p></li><li><p><strong>启动应用程序</strong>：通过调用 Vue 实例的 <code>mount</code> 方法来启动应用程序。</p></li></ol><h2 id="获取更多信息"><a href="#获取更多信息" class="headerlink" title="获取更多信息"></a>获取更多信息</h2><p>要深入了解 Vue.js，请查看 <a href="https://vuejs.org/">Vue.js 官方文档</a>。官方文档包含了详尽的信息、示例和教程，以帮助您更好地理解和使用 Vue.js。</p><p>Vue.js 是一个灵活、高效且易于学习的前端框架，被广泛用于构建现代 Web 应用程序。它的生态系统丰富，社区活跃，适用于各种项目规模。</p><p><strong>开始使用 Vue.js，构建出色的用户界面吧！</strong></p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tech </tag>
            
            <tag> front </tag>
            
            <tag> js </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nvm</title>
      <link href="/2023/09/25/env/nvm/"/>
      <url>/2023/09/25/env/nvm/</url>
      
        <content type="html"><![CDATA[<h2 id="步骤-1：下载-nvm"><a href="#步骤-1：下载-nvm" class="headerlink" title="步骤 1：下载 nvm"></a>步骤 1：下载 nvm</h2><ol><li><p>打开您的 Web 浏览器，并访问 nvm for Windows GitHub 页面：<a href="https://github.com/coreybutler/nvm-windows">https://github.com/coreybutler/nvm-windows</a>。</p></li><li><p>在 GitHub 页面上，下载最新的 nvm 安装程序（通常为 <code>.zip</code> 文件）。</p></li></ol><h2 id="步骤-2：安装-nvm"><a href="#步骤-2：安装-nvm" class="headerlink" title="步骤 2：安装 nvm"></a>步骤 2：安装 nvm</h2><ol><li><p>解压下载的 nvm 安装程序文件到您希望安装的位置。例如，您可以将其解压到 <code>C:\nvm</code>。</p></li><li><p>打开命令提示符（Command Prompt）或 PowerShell。</p></li><li><p>运行以下命令以配置 nvm（请根据您的实际安装路径进行调整）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm setup</span><br></pre></td></tr></table></figure><p>这将设置 nvm，并创建一个配置文件。</p></li></ol><h2 id="步骤-3：安装-Node-js"><a href="#步骤-3：安装-Node-js" class="headerlink" title="步骤 3：安装 Node.js"></a>步骤 3：安装 Node.js</h2><ol><li><p>打开命令提示符或 PowerShell。</p></li><li><p>运行以下命令以查看可用的 Node.js 版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm list available</span><br></pre></td></tr></table></figure></li><li><p>选择您想要安装的 Node.js 版本，并运行以下命令来安装它。例如，要安装 Node.js 14.17.0，运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install 14.17.0</span><br></pre></td></tr></table></figure></li><li><p>安装完成后，运行以下命令以在当前会话中使用安装的 Node.js 版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm use 14.17.0</span><br></pre></td></tr></table></figure></li></ol><h2 id="步骤-4：验证安装"><a href="#步骤-4：验证安装" class="headerlink" title="步骤 4：验证安装"></a>步骤 4：验证安装</h2><ol><li><p>打开命令提示符或 PowerShell。</p></li><li><p>运行以下命令来验证已安装的 Node.js 和 npm 版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>如果成功安装，将显示 Node.js 和 npm 的版本号。</p></li></ol><p>现在，您已成功在 Windows 上安装和配置 nvm，并安装了特定版本的 Node.js。您可以随时使用 nvm 切换到不同的 Node.js 版本，以满足您的项目需求。</p>]]></content>
      
      
      <categories>
          
          <category> Env </category>
          
      </categories>
      
      
        <tags>
            
            <tag> env </tag>
            
            <tag> nvm </tag>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react</title>
      <link href="/2023/09/23/tech/react/"/>
      <url>/2023/09/23/tech/react/</url>
      
        <content type="html"><![CDATA[<p>以下是关于 React 的官方介绍的Markdown格式文档：</p><h1 id="React-官方介绍"><a href="#React-官方介绍" class="headerlink" title="React 官方介绍"></a>React 官方介绍</h1><p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/2560px-React-icon.svg.png" alt="React Logo"></p><h2 id="什么是-React？"><a href="#什么是-React？" class="headerlink" title="什么是 React？"></a>什么是 React？</h2><p>React 是一个用于构建用户界面的开源 JavaScript 库。它由 Facebook 开发，并在开源社区的支持下持续演进。React 被广泛用于构建 Web 应用程序的用户界面，特别是单页应用程序（SPAs）。</p><h2 id="主要特点"><a href="#主要特点" class="headerlink" title="主要特点"></a>主要特点</h2><p>React 提供了一些强大的特性，使其成为一个流行的前端开发工具：</p><ul><li><p><strong>组件化</strong>：React 鼓励开发人员将界面拆分成多个可重用的组件，从而提高代码的可维护性和可重用性。</p></li><li><p><strong>虚拟 DOM</strong>：React 使用虚拟 DOM（Virtual DOM）来提高性能。它通过比较虚拟 DOM 和实际 DOM 的差异来最小化页面重新渲染，以提高性能。</p></li><li><p><strong>单向数据流</strong>：React 遵循单向数据流的原则，使数据的流向更加清晰和可控。</p></li><li><p><strong>生态系统</strong>：React 生态系统丰富，有大量的第三方库和工具，如 React Router（用于路由管理）、Redux（用于状态管理）等。</p></li></ul><h2 id="使用-React"><a href="#使用-React" class="headerlink" title="使用 React"></a>使用 React</h2><p>要开始使用 React，您可以按照以下步骤操作：</p><ol><li><p><strong>安装 Node.js 和 npm</strong>：React 的开发通常需要 Node.js 和 npm 的支持。请确保您的计算机上已安装它们。</p></li><li><p><strong>创建一个新的 React 应用程序</strong>：您可以使用 <a href="https://reactjs.org/docs/create-a-new-react-app.html">Create React App</a> 来初始化一个新的 React 项目。</p></li><li><p><strong>开发您的应用程序</strong>：编辑 React 组件，处理数据和事件，以构建您的用户界面。</p></li><li><p><strong>运行应用程序</strong>：使用 <code>npm start</code> 命令来启动开发服务器，预览您的 React 应用程序。</p></li></ol><h2 id="获取更多信息"><a href="#获取更多信息" class="headerlink" title="获取更多信息"></a>获取更多信息</h2><p>要深入了解 React，请查看 <a href="https://reactjs.org/">React 官方文档</a>。它包含了有关 React 的详尽信息、教程和示例代码。</p><p>React 是一个强大的工具，用于构建交互式和高性能的用户界面。它的灵活性、性能和庞大的社区支持使其成为前端开发的首选工具之一。</p><p><strong>开始使用 React，构建出色的用户界面吧！</strong></p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tech </tag>
            
            <tag> front </tag>
            
            <tag> react </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git</title>
      <link href="/2023/09/23/env/git/"/>
      <url>/2023/09/23/env/git/</url>
      
        <content type="html"><![CDATA[<h1 id="在Windows上安装Git"><a href="#在Windows上安装Git" class="headerlink" title="在Windows上安装Git"></a>在Windows上安装Git</h1><p>Git是一个分布式版本控制系统，用于跟踪和管理代码的更改。以下是在Windows操作系统上安装Git的步骤。</p><h2 id="步骤-1：下载Git"><a href="#步骤-1：下载Git" class="headerlink" title="步骤 1：下载Git"></a>步骤 1：下载Git</h2><ol><li><p>打开您的Web浏览器，并访问Git官方网站：<a href="https://git-scm.com/">https://git-scm.com/</a>。</p></li><li><p>在网站上，点击 “Download”（下载）按钮。</p></li><li><p>滚动页面，找到Windows下的”Git for Windows”（适用于Windows的Git）并点击下载按钮。</p></li></ol><h2 id="步骤-2：安装Git"><a href="#步骤-2：安装Git" class="headerlink" title="步骤 2：安装Git"></a>步骤 2：安装Git</h2><ol><li><p>打开下载的Git安装程序（通常为<code>.exe</code>文件）。</p></li><li><p>在安装程序欢迎界面上，点击 “Next”（下一步）。</p></li><li><p>阅读并接受Git的许可协议，然后点击 “Next”（下一步）。</p></li><li><p>选择Git的安装位置。通常，使用默认位置即可，但您也可以选择其他位置。然后点击 “Next”（下一步）。</p></li><li><p>在”Select Components”（选择组件）界面上，保持默认选择，然后点击 “Next”（下一步）。</p></li><li><p>在”Select Start Menu Folder”（选择开始菜单文件夹）界面上，保持默认选项，然后点击 “Next”（下一步）。</p></li><li><p>在”Choosing the default editor used by Git”（选择Git默认使用的编辑器）界面上，如果您不熟悉，建议选择 “Use the Nano editor by default”（默认使用Nano编辑器）。然后点击 “Next”（下一步）。</p></li><li><p>在”Adjusting your PATH environment”（调整您的PATH环境）界面上，选择 “Use Git from Git Bash only”（只在Git Bash中使用Git），然后点击 “Next”（下一步）。</p></li><li><p>在”Choosing HTTPS transport backend”（选择HTTPS传输后端）界面上，选择 “Use the OpenSSL library”（使用OpenSSL库），然后点击 “Next”（下一步）。</p></li><li><p>在”Configuring the line ending conversions”（配置换行符转换）界面上，选择 “Checkout Windows-style, commit Unix-style line endings”（检出Windows样式，提交Unix样式换行符）。然后点击 “Next”（下一步）。</p></li><li><p>在”Configuring the terminal emulator to use with Git Bash”（配置用于Git Bash的终端模拟器）界面上，选择 “Use Windows’ default console window”（使用Windows的默认控制台窗口）。然后点击 “Next”（下一步）。</p></li><li><p>在”Configuring extra options”（配置额外选项）界面上，保持默认选择，然后点击 “Next”（下一步）。</p></li><li><p>在”Installing”（安装）界面上，点击 “Install”（安装）以开始安装Git。</p></li><li><p>安装完成后，点击 “Finish”（完成）以退出安装程序。</p></li></ol><h2 id="步骤-3：验证安装"><a href="#步骤-3：验证安装" class="headerlink" title="步骤 3：验证安装"></a>步骤 3：验证安装</h2><ol><li><p>打开命令提示符（Command Prompt）或Git Bash。</p></li><li><p>在命令提示符或Git Bash中，输入以下命令来验证Git是否成功安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p>如果成功安装，将显示Git的版本号。</p></li></ol><p>恭喜，您已成功在Windows上安装了Git。现在您可以使用Git来管理代码仓库和进行版本控制。</p>]]></content>
      
      
      <categories>
          
          <category> Env </category>
          
      </categories>
      
      
        <tags>
            
            <tag> env </tag>
            
            <tag> git </tag>
            
            <tag> version-manager </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>blazor</title>
      <link href="/2023/09/23/tech/blazor/"/>
      <url>/2023/09/23/tech/blazor/</url>
      
        <content type="html"><![CDATA[<p>以下是一个关于Blazor的官方介绍的Markdown格式文档，包括Blazor的Logo图片：</p><!-- <img src="http://s34kam7s5.hn-bkt.clouddn.com/static/images/2.png"><img src="http://s34kam7s5.hn-bkt.clouddn.com/static/images/logo.jpg"> --><h1 id="Blazor-官方介绍"><a href="#Blazor-官方介绍" class="headerlink" title="Blazor 官方介绍"></a>Blazor 官方介绍</h1><p><img src="https://docs.microsoft.com/en-us/aspnet/core/blazor/images/blazor-logo.png" alt="Blazor Logo"></p><h2 id="什么是-Blazor？"><a href="#什么是-Blazor？" class="headerlink" title="什么是 Blazor？"></a>什么是 Blazor？</h2><p>Blazor 是一种现代的、用于构建交互式Web应用程序的开源Web框架，由微软开发和维护。它的独特之处在于，Blazor 允许您使用C#编程语言来构建客户端Web应用程序，而不必依赖JavaScript。</p><h2 id="主要特点"><a href="#主要特点" class="headerlink" title="主要特点"></a>主要特点</h2><p>Blazor 提供了许多强大的特性，使其成为一个受欢迎的Web开发框架：</p><ul><li><p><strong>单页应用程序（SPA）</strong>：Blazor 应用程序是单页应用程序，它们在加载后在浏览器中运行，通过AJAX从服务器加载数据。</p></li><li><p><strong>C# 和 .NET</strong>：您可以使用熟悉的C#编程语言以及.NET库和工具，从而减少了学习曲线。</p></li><li><p><strong>组件化</strong>：Blazor 应用程序是基于组件的，您可以创建可重用的组件，提高了代码的可维护性。</p></li><li><p><strong>双向数据绑定</strong>：Blazor 支持双向数据绑定，使数据与UI保持同步。</p></li><li><p><strong>路由</strong>：Blazor 提供了强大的路由功能，用于管理URL和页面导航。</p></li><li><p><strong>模块性</strong>：您可以按需加载Blazor组件，从而减少初始加载时间。</p></li></ul><h2 id="支持的运行时"><a href="#支持的运行时" class="headerlink" title="支持的运行时"></a>支持的运行时</h2><p>Blazor 有两个主要运行时：</p><ul><li><p><strong>Blazor WebAssembly</strong>：运行在浏览器中的WebAssembly。这允许您在客户端上运行C#代码，无需服务器支持。</p></li><li><p><strong>Blazor Server</strong>：运行在服务器上，通过SignalR与客户端通信。适用于需要更高安全性和对服务器端数据更多控制的应用。</p></li></ul><h2 id="开始使用-Blazor"><a href="#开始使用-Blazor" class="headerlink" title="开始使用 Blazor"></a>开始使用 Blazor</h2><p>要开始使用 Blazor，您可以按照以下步骤操作：</p><ol><li><p>安装 .NET SDK（如果尚未安装）。</p></li><li><p>创建一个新的 Blazor 项目。</p></li><li><p>开发您的应用程序，构建组件，处理数据和事件，以及配置路由。</p></li><li><p>运行您的 Blazor 应用程序并在浏览器中查看结果。</p></li></ol><h2 id="获取更多信息"><a href="#获取更多信息" class="headerlink" title="获取更多信息"></a>获取更多信息</h2><p>要了解有关 Blazor 的更多信息，请访问 <a href="https://docs.microsoft.com/en-us/aspnet/core/blazor/">Blazor 官方文档</a>。</p><p>Blazor 是一个强大的工具，用于构建现代Web应用程序，无论是单页应用程序还是服务器渲染应用程序。它为开发人员提供了灵活性、性能和生产力，以满足各种Web应用程序的需求。</p><p><strong>开始使用 Blazor，开始构建您的下一个Web应用程序吧！</strong></p><h2 id="blazor"><a href="#blazor" class="headerlink" title="blazor"></a>blazor</h2>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tech </tag>
            
            <tag> front </tag>
            
            <tag> c# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nodejs</title>
      <link href="/2023/09/23/env/nodejs/"/>
      <url>/2023/09/23/env/nodejs/</url>
      
        <content type="html"><![CDATA[<h2 id="步骤-1：下载-Node-js"><a href="#步骤-1：下载-Node-js" class="headerlink" title="步骤 1：下载 Node.js"></a>步骤 1：下载 Node.js</h2><ol><li><p>打开您的 Web 浏览器，并访问 Node.js 官方网站：<a href="https://nodejs.org/">https://nodejs.org/</a>。</p></li><li><p>在网站首页，您将看到两个版本可供选择：LTS（长期支持）和 Current（当前版本）。建议选择 LTS 版本，因为它稳定且有长期支持。</p></li><li><p>点击 LTS 版本下的 “Recommended for Most Users”（推荐大多数用户使用）按钮，以下载安装程序。</p></li></ol><h2 id="步骤-2：安装-Node-js"><a href="#步骤-2：安装-Node-js" class="headerlink" title="步骤 2：安装 Node.js"></a>步骤 2：安装 Node.js</h2><ol><li><p>打开下载的 Node.js 安装程序（通常为 <code>.msi</code> 文件）。</p></li><li><p>在安装程序欢迎界面上，点击 “Next”（下一步）。</p></li><li><p>阅读 Node.js 的许可协议，如果同意，请勾选 “I accept the terms in the License Agreement”（我接受许可协议中的条款），然后点击 “Next”（下一步）。</p></li><li><p>在选择安装类型界面上，通常建议选择 “Recommended”（推荐），然后点击 “Next”（下一步）。</p></li><li><p>选择安装 Node.js 的目标文件夹，通常使用默认位置即可。然后点击 “Next”（下一步）。</p></li><li><p>在选择开始菜单文件夹界面上，保持默认选项，然后点击 “Next”（下一步）。</p></li><li><p>在选择附加任务界面上，通常建议选择 “Automatically install the necessary tools…”（自动安装必要的工具…）并勾选 “Add to PATH”（添加到 PATH）。然后点击 “Next”（下一步）。</p></li><li><p>在准备安装界面上，点击 “Install”（安装）以开始安装 Node.js。</p></li><li><p>安装程序将开始安装 Node.js，并在安装完成后显示 “Completed”（已完成）。然后点击 “Next”（下一步）。</p></li><li><p>在完成安装界面上，点击 “Finish”（完成）以退出安装程序。</p></li></ol><h2 id="步骤-3：验证安装"><a href="#步骤-3：验证安装" class="headerlink" title="步骤 3：验证安装"></a>步骤 3：验证安装</h2><ol><li><p>打开命令提示符（Command Prompt）或 PowerShell。</p></li><li><p>在命令提示符或 PowerShell 中，输入以下命令来验证 Node.js 和 npm（Node 包管理器）是否成功安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>如果成功安装，将显示 Node.js 和 npm 的版本号。</p></li></ol><p>恭喜，您已成功在 Windows 上安装 Node.js。现在您可以使用 Node.js 来运行 JavaScript 应用程序并管理依赖包。</p>]]></content>
      
      
      <categories>
          
          <category> Env </category>
          
      </categories>
      
      
        <tags>
            
            <tag> env </tag>
            
            <tag> nodejs </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
